{"version":3,"file":"console-menu.js.cjs.development.js","sources":["../src/helpers/rendering.ts","../src/structs/menu-item.ts","../src/items/button.ts","../src/items/check-button.ts","../src/helpers/formater.ts","../src/structs/menu-core.ts","../src/classes/console-utils.ts","../src/classes/screen.ts","../src/items/natives/menu-header.ts","../src/items/natives/menu-footer.ts","../src/menus/menu.ts","../src/items/sub-menu.ts","../src/index.ts"],"sourcesContent":["\r\nimport * as ffi from 'ffi-napi';\r\n\r\nconst kernal = ffi.Library('kernel32', {\r\n    'GetStdHandle': ['int', ['int']],\r\n    'SetConsoleTextAttribute': ['int', ['int', 'int']],\r\n    \"GetConsoleScreenBufferInfo\": ['int', ['int', 'pointer']]\r\n});\r\n\r\n\r\nexport enum Color {\r\n    FOREGROUND_BLUE = 0x0001,\t// Text color contains blue.\r\n    FOREGROUND_GREEN = 0x0002,\t// Text color contains green.\r\n    FOREGROUND_RED = 0x0004,\t// Text color contains red.\r\n    FOREGROUND_INTENSITY = 0x0008,\t// Text color is intensified.\r\n    FOREGROUND_RESET = 0x000F,\r\n    BACKGROUND_BLUE = 0x0010,\t// Background color contains blue.\r\n    BACKGROUND_GREEN = 0x0020,\t// Background color contains green.\r\n    BACKGROUND_RED = 0x0040,\t// Background color contains red.\r\n    BACKGROUND_INTENSITY = 0x0080,\t// Background color is intensified.\r\n    BACKGROUND_RESET = 256,\r\n    COMMON_LVB_LEADING_BYTE = 0x0100,\t// Leading byte.\r\n    COMMON_LVB_TRAILING_BYTE = 0x0200,\t// Trailing byte.\r\n    COMMON_LVB_GRID_HORIZONTAL = 0x0400,\t// Top horizontal.\r\n    COMMON_LVB_GRID_LVERTICAL = 0x0800,\t// Left vertical.\r\n    COMMON_LVB_GRID_RVERTICAL = 0x1000,\t// Right vertical.\r\n    COMMON_LVB_REVERSE_VIDEO = 0x4000,\t// Reverse foreground and background attribute.\r\n    COMMON_LVB_UNDERSCORE = 0x8000\t// Underscore.\r\n}\r\n\r\nexport class RenderColor {\r\n\r\n    public static _default_attributes: number = RenderColor.getCurrentColor();\r\n    private _is_applyed: boolean = false;\r\n\r\n    constructor(\r\n        public readonly color: number\r\n    ) { }\r\n\r\n    public static create(color: string | number) {\r\n        return new RenderColor(typeof color === 'string' ? Number(color.split('\u001b[')[1].split('m')[0]) : color)\r\n    }\r\n\r\n    public toString() { // Debug only !!!\r\n        return `[color: ${this.color}]|`;\r\n    }\r\n\r\n    private static getCurrentColor(): number {\r\n        const handle = kernal.GetStdHandle(/** Default Console Handle */ -11);\r\n        \r\n        const buff = Buffer.alloc(16 /** sizeof(CONSOLE_SCREEN_BUFFER_INFO) == 16 */) \r\n\r\n        /** @ts-ignore */\r\n        kernal.GetConsoleScreenBufferInfo(handle, buff);\r\n\r\n        return buff.readInt32LE(8 /** offest in memory */)\r\n    }\r\n\r\n    public static applyColor(color: number) {\r\n        const handle = kernal.GetStdHandle(/** Default Console Handle */ -11);\r\n        \r\n        const buff = Buffer.alloc(16 /** sizeof(CONSOLE_SCREEN_BUFFER_INFO) == 16 */) \r\n\r\n        /** @ts-ignore */\r\n        kernal.GetConsoleScreenBufferInfo(handle, buff);\r\n\r\n        kernal.SetConsoleTextAttribute(handle, color)\r\n\r\n        return buff.readInt32LE(8 /** offest in memory */)\r\n    }\r\n\r\n    public toggle() {\r\n        if (this._is_applyed) {\r\n            this.end()\r\n        } else {\r\n            this.apply()\r\n        }\r\n        this._is_applyed = !this._is_applyed\r\n    }\r\n\r\n    public apply() {\r\n        RenderColor.applyColor(this.color)\r\n    }\r\n\r\n    public end() {\r\n        RenderColor.applyColor(RenderColor._default_attributes)\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function byteOnly(n: number) {\r\n    return Math.max(n, -n)\r\n}\r\n\r\nexport function centerString(str: string, width: number) {\r\n    let spaces = byteOnly(\r\n        width - str.length\r\n    ) / 2\r\n    \r\n    return (\r\n        ' '.repeat(spaces + (\r\n                str.length % 2 == 1 ? 1 : 0\r\n            )\r\n        ) +\r\n        str +\r\n        ' '.repeat(spaces)\r\n    )\r\n}","import MenuCore from \"./menu-core\";\r\n\r\n\r\n\r\nexport interface ItemRenderResult {\r\n\r\n}\r\n\r\nexport interface MenuItemProps {\r\n    is_countless: boolean,\r\n    onClicked: (this: MenuItem) => any,\r\n    onKeyDown: (this: MenuItem, key: any) => void,\r\n    disabled: boolean,\r\n}\r\n\r\nexport default abstract class MenuItem<M extends MenuCore = MenuCore> {\r\n\r\n    \r\n    readonly ITEM_TYPE: string = \"DEFAULT_ITEM\";\r\n    protected _is_disabled: boolean = false;\r\n    /** @ts-ignore: Defined afeter calling MenuCore.append() */\r\n    private _id: string;\r\n    /** @ts-ignore: Defined afeter calling MenuCore.append() */\r\n    private _menu: M\r\n\r\n    public readonly propertys: MenuItemProps;\r\n\r\n    public get label() {\r\n        return this._label\r\n    }\r\n\r\n    public set label(value) {\r\n        this._label = value\r\n    }\r\n\r\n    constructor(\r\n        private _label: string,\r\n        propertys: Partial<MenuItemProps> = {}\r\n    ) {\r\n        this.propertys = Object.assign<MenuItemProps, typeof propertys>({\r\n            is_countless: false,\r\n            onClicked: () => {},\r\n            onKeyDown: (key: any) => {},\r\n            disabled: false,\r\n        }, propertys)\r\n\r\n        if(this.propertys.disabled) {\r\n            this.disable()\r\n        } \r\n\r\n    }\r\n\r\n    public get isDisabled() {\r\n        return this._is_disabled;\r\n    }\r\n\r\n    public get menu() {\r\n        if(!this._menu) {\r\n            throw new Error(\"Cannot access `MenuItem.menu` property before append the item to the menu.\");\r\n        }\r\n        return this._menu;\r\n    }\r\n\r\n    public set menu(val: M) {\r\n        if(!this._menu) {\r\n            this._menu = val\r\n        }\r\n    }\r\n\r\n    public get id() {\r\n        return this._id;\r\n    }\r\n\r\n    public set id(val: string) {\r\n        if(!this._id?.length) {\r\n            this._id = val\r\n        }\r\n    }\r\n\r\n    public disable() {\r\n        this._is_disabled = true;\r\n        if(this._menu) {\r\n            this._menu.render();\r\n        }\r\n    }\r\n\r\n    public enable() {\r\n        this._is_disabled = false;\r\n        if(this._menu) {\r\n            this._menu.render();\r\n        }\r\n    }\r\n\r\n    public onKeyDown(key: any) {\r\n        this.propertys.onKeyDown.bind(this)(key);\r\n    }\r\n\r\n    public onClicked(...args: any[]): any {\r\n        /** @ts-ignore */\r\n        return this.propertys.onClicked.bind(this)(...args);\r\n    }\r\n\r\n    /**\r\n     * Render the item\r\n     */\r\n    public render(width: number): string {\r\n        throw new Error(\"`Item.render(width)` Method not implemented.\");\r\n    }\r\n}\r\n\r\n","import { centerString } from \"../helpers/rendering\";\r\nimport MenuItem, { MenuItemProps } from \"../structs/menu-item\";\r\n\r\n\r\n\r\n\r\n\r\nexport interface ButtonProps extends Omit<MenuItemProps, 'onClicked'> {\r\n    onClicked: (this: Button) => void,\r\n}\r\n\r\n\r\nexport default class Button extends MenuItem {\r\n\r\n\r\n    constructor(\r\n        label: string,\r\n        props: Partial<ButtonProps> = {},\r\n    ) { super(label, props as any) };\r\n\r\n    public render(width: number) {\r\n        return centerString(this.label, width); \r\n    }\r\n}","import Menu from \"../menus/menu\";\r\nimport { byteOnly } from \"../helpers/rendering\";\r\nimport MenuItem, { MenuItemProps } from \"../structs/menu-item\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface CheckButtonProps extends Omit<MenuItemProps, \"onClicked\"> {\r\n    onClicked: (this: CheckButton, is_checked: boolean) => void;\r\n    checked: boolean;\r\n}\r\n\r\nexport default class CheckButton extends MenuItem<Menu> {\r\n\r\n    private _checked: boolean = false\r\n\r\n    public get checked() {\r\n        return this._checked;\r\n    }\r\n\r\n    constructor(\r\n        label: string,\r\n        props: Partial<CheckButtonProps> = {}\r\n    ) { \r\n        super(label, props as any)\r\n        this._checked = props.checked ?? false\r\n    }\r\n\r\n\r\n    public render(width: number) {\r\n\r\n        const checked = this._checked ? '[X]' : '[ ]'\r\n\r\n        let spaces = byteOnly(\r\n            width - this.label.length\r\n        ) / 2\r\n        \r\n        return (\r\n            ' '.repeat(spaces + (\r\n                this.label.length % 2 == 1 ? 1 : 0\r\n                )\r\n            ) +\r\n            this.label +\r\n            ' '.repeat(spaces - checked.length) + checked\r\n        )\r\n    }\r\n\r\n\r\n    public onClicked() {\r\n        this._checked = !this._checked;\r\n        super.onClicked(this._checked)\r\n    }\r\n}","\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// format(\"${name} ${age}\", {name: \"John\", age: 34}) // \"John 34\"\r\nexport default function format<T extends object>(data: string, obj: T) {\r\n    return data.replace(/\\{([^\\}]*)\\}/g, (match, key) => {\r\n        /** @ts-ignore */\r\n        return obj[key] ?? \"\"\r\n    })\r\n}","import format from \"../helpers/formater\";\r\nimport MenuItem from \"./menu-item\";\r\n\r\n\r\n\r\nexport interface MenuPropertys {\r\n    \r\n    // Styles\r\n    left_column_style: string\r\n    right_column_style: string\r\n    \r\n    header_style: string\r\n    \r\n    bottom_row_style: string\r\n    between_items_style: string\r\n\r\n    // Padding\r\n    padding: number\r\n    between_items_padding: number\r\n\r\n\r\n    // options\r\n    message_item_selected: boolean, // \"Item {index} selected\"\r\n    message_item_format: string // \"Item ${index} selected\"\r\n\r\n    minimal_width: number\r\n    \r\n\r\n}\r\n\r\nexport default abstract class MenuCore {\r\n\r\n    public static readonly MENU_TYPE: string = \"DEFAULT_MENU\";\r\n    protected readonly propertys: MenuPropertys\r\n    \r\n    protected _selected_item_idx: number = -1\r\n    protected _items: MenuItem[] = []\r\n    protected _message: string = \"\";\r\n    private _message_timeout_tmo: NodeJS.Timeout | undefined;\r\n    \r\n    protected _is_menu_locked: boolean = false;\r\n    protected _is_menu_hidden: boolean = false;\r\n    // protected _screen: Screen = new Screen()\r\n\r\n\r\n    public get current_selected_item(): MenuItem {\r\n        return this._items[this._selected_item_idx];\r\n    }\r\n\r\n    public get selected_item_idx(): number {\r\n        return this._selected_item_idx;\r\n    }\r\n\r\n    constructor(\r\n        propertys: Partial<MenuPropertys> = {}\r\n    ) {\r\n        this.propertys = Object.assign<MenuPropertys, typeof propertys>({\r\n           \r\n            left_column_style: '|',\r\n            right_column_style: '|',\r\n           \r\n            header_style: '-',\r\n            bottom_row_style: '-',\r\n           \r\n            between_items_style: ' ',\r\n           \r\n            padding: 2,\r\n            between_items_padding: 1,\r\n\r\n            message_item_selected: false,\r\n            message_item_format: \"Item ${index} selected\",\r\n\r\n            minimal_width: 5,\r\n\r\n        }, propertys)\r\n    }\r\n\r\n\r\n\r\n\r\n    public showMessage(message: string, timeout: number = -1) {\r\n        this._message = message\r\n        this.render()\r\n        if(timeout > 0) {\r\n            clearTimeout(this._message_timeout_tmo)\r\n            this._message_timeout_tmo = setTimeout(() => {\r\n                this.clearMessage()\r\n                this.render()\r\n            }, timeout)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Call this.showMessage(\"\", -1)\r\n     */\r\n    public clearMessage() {\r\n        this.showMessage(\"\", -1)\r\n    }\r\n\r\n    protected _on_key_down(keydat: string | undefined, key: any) {\r\n\r\n        if(this._is_menu_locked) return\r\n\r\n        if(key.name == 'down') {\r\n            this.moveSelection(false)\r\n\r\n            if(this.propertys.message_item_selected)\r\n                this.showMessage( // showMessage will render the menu\r\n                    format(\r\n                        this.propertys.message_item_format,\r\n                        { index: this._selected_item_idx }\r\n                    )\r\n                );\r\n            else this.render();\r\n\r\n        } else if(key.name == 'up') {\r\n            this.moveSelection(true)\r\n        \r\n            if(this.propertys.message_item_selected)\r\n                this.showMessage( // showMessage will render the menu\r\n                    format(\r\n                        this.propertys.message_item_format,\r\n                        { index: this._selected_item_idx }\r\n                    )\r\n                );\r\n            else this.render();\r\n\r\n        }else if(key.name === 'left') {\r\n            this.current_selected_item.onClicked()\r\n            this.render()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Lock the menu control\r\n     */\r\n    public lock(): void {\r\n        this._is_menu_locked = true;\r\n    }\r\n    \r\n    /**\r\n     * Unlock the menu control\r\n     */\r\n    public unlock(): void {\r\n        this._is_menu_locked = false;\r\n    }\r\n\r\n    public clear() {\r\n        throw new Error(\"`Menu.clear()` Method not implemented.\");\r\n    }\r\n\r\n    protected _hide() {\r\n        throw new Error(\"`Menu._hide()` Method not implemented.\");\r\n    }\r\n\r\n    protected _show() {\r\n        throw new Error(\"`Menu._show()` Method not implemented.\");\r\n    }\r\n\r\n    public hide() {\r\n\r\n        if(!this._is_menu_hidden) {\r\n            this._is_menu_hidden = true;\r\n            this._hide()\r\n        }\r\n    }\r\n\r\n    public show() {\r\n        if(this._is_menu_hidden) {\r\n            this._is_menu_hidden = false;\r\n            this._show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Append new Item\r\n     * @param at Append the item at\r\n     */\r\n    public append(item: MenuItem, at?: number | MenuItem): void {\r\n        if(typeof at == 'number') {\r\n            this._items.splice(at, 0, item);\r\n        } else if(at instanceof MenuItem) {\r\n            this._items.splice(this._items.indexOf(at), 0, item);\r\n        }else {\r\n            this._items.push(item);\r\n        }\r\n\r\n        item.id = item.ITEM_TYPE + \": \" + this._items.indexOf(item);\r\n        item.menu = this\r\n    }\r\n\r\n    /**\r\n     * Remove item from the menu\r\n     */\r\n    public remove(item: MenuItem): void {\r\n        this._items.splice(this._items.indexOf(item), 1);\r\n    }\r\n    \r\n    public moveSelection(up: boolean): void {\r\n\r\n        this._selected_item_idx += up ? -1 : 1;\r\n        if(this._selected_item_idx < 0) {\r\n            this._selected_item_idx = this._items.length - 1;\r\n        } else if(this._selected_item_idx >= this._items.length) {\r\n            this._selected_item_idx = 0;\r\n        }\r\n\r\n        if(this.current_selected_item.isDisabled) {\r\n            this.moveSelection(up);\r\n        }\r\n\r\n    }\r\n    \r\n    /**\r\n     * Disable an item from the menu\r\n     */\r\n    public disable(item: MenuItem | number): void {\r\n        if(typeof item == 'number') {\r\n            item = this._items[item]\r\n        }\r\n\r\n        item?.disable?.();\r\n    }\r\n\r\n    /**\r\n     * Enable an item from the menu\r\n     */\r\n    public enable(item: MenuItem | number): void {\r\n        if(typeof item == 'number') {\r\n            item = this._items[item]\r\n        }\r\n        \r\n        item?.enable?.();\r\n    }\r\n\r\n    /**\r\n     * Is item enabled\r\n     */\r\n    public isEnabled(item: MenuItem | number): boolean {\r\n        if(typeof item == 'number') {\r\n            item = this._items[item]\r\n        }\r\n\r\n        return typeof item?.isDisabled === 'boolean' ? !item?.isDisabled : false;\r\n    }\r\n\r\n    /**\r\n     * Is item disabled\r\n     */\r\n    public isDisabled(item: MenuItem | number): boolean {\r\n        if(typeof item == 'number') {\r\n            item = this._items[item]\r\n        }\r\n\r\n        return typeof item?.isDisabled === 'boolean' ? item?.isDisabled : false;\r\n    }\r\n\r\n    /**\r\n     * Get the current menu index\r\n     */\r\n    public currentItemIndex(): number {\r\n        return this._selected_item_idx;\r\n    }\r\n\r\n    /**\r\n     * Get Item by index\r\n     */\r\n\r\n    public getItem(index: number): MenuItem | undefined {\r\n        return this._items[index];\r\n    }\r\n\r\n\r\n    /**\r\n     * Initialize the menu\r\n     */\r\n    public initialize(...args: any[]): void {\r\n        throw new Error(\"`Menu.render()` Method not implemented.\");\r\n    }\r\n    \r\n    /**\r\n     * Render the menu\r\n     */\r\n    public render(): void {\r\n        throw new Error(\"`Menu.render()` Method not implemented.\");\r\n    }\r\n\r\n}","\r\n\r\n\r\n\r\n\r\n\r\nexport function setCursorPosition(x: number, y: number) {\r\n    process.stdout.cursorTo(x, y);\r\n}\r\n","import { setCursorPosition } from \"./console-utils\";\r\nimport { RenderColor } from '../helpers/rendering'\r\nimport { writeFileSync } from \"fs\";\r\n\r\n// let _flag_c = 0;\r\n// const flag = () => 1 << _flag_c++\r\n// const flag_containt = (flags: number, d: number) => (d & flags) === d\r\n\r\n//const array_same = (a: any[], b: any[]) => a.length === b.length && a.every((v, i) => v === b[i])\r\n\r\n// export enum Flags {\r\n    \r\n\r\n// }\r\n\r\nexport type RenderableLine = [/** flags */ number, (string | [ /** colors flags */ number, /** string to render */ string ])[]] \r\nexport type ScreenBuffer = RenderableLine[]\r\n\r\nexport type ScreenCache = number[]\r\n\r\n\r\nexport interface ScreenOptions {\r\n    cache?: ScreenCache\r\n    curser_under_screen?: boolean\r\n}\r\n\r\nexport default function renderScreenBuffer(buffer: ScreenBuffer, options: ScreenOptions = {}): ScreenCache {\r\n\r\n    let height = 0;\r\n\r\n    if(!options.cache) {\r\n        options.cache = []\r\n    }\r\n\r\n    writeFileSync(\r\n        \"./menu.log\",\r\n        \"[current buffer]:\\n\" +\r\n        buffer.map(line => line.toString()).join(\"\\n\") +\r\n        \"\\n\\n[last buffer]:\\n\" +\r\n        options.cache?.map?.(line => line.toString()).join?.(\"\\n\")\r\n    );\r\n\r\n    const cache_rendered_lines: ScreenCache = []\r\n\r\n    while(height < buffer.length) {\r\n        \r\n        cache_rendered_lines[height] = 0\r\n\r\n        const current_line       = buffer[height]\r\n        // const current_line_flags = current_line[0]\r\n\r\n        let _current_point = -1\r\n\r\n        setCursorPosition(0, height)\r\n\r\n        while(current_line[1].length >++ _current_point) {\r\n\r\n            const current_str = current_line[1][_current_point]\r\n            const is_color    = current_str instanceof Array\r\n\r\n            cache_rendered_lines[height] += is_color ? (\r\n                current_str[1].length\r\n            ) : (\r\n                current_str.length\r\n            )\r\n\r\n            if(is_color) {\r\n                /** @ts-ignore: if is_color is true that mean current_str[0] is number */\r\n                RenderColor.applyColor(current_str[0])\r\n            }\r\n\r\n            process.stdout.write(\r\n                /** @ts-ignore: ??? */\r\n                is_color ? current_str[1] : current_str\r\n            )\r\n\r\n            if(is_color) {\r\n                RenderColor.applyColor(RenderColor._default_attributes)\r\n            }\r\n        }\r\n\r\n        if(cache_rendered_lines[height] < options.cache[height]) {\r\n            process.stdout.write(\r\n                ' '.repeat(\r\n                    options.cache[height] - cache_rendered_lines[height] + 1\r\n                )\r\n            )\r\n        }\r\n                \r\n        height++;\r\n    }\r\n\r\n    if(cache_rendered_lines.length < options.cache.length) {\r\n        for(let i = cache_rendered_lines.length; i < options.cache.length; i++) {\r\n            setCursorPosition(0, height++)\r\n            process.stdout.write(\r\n                ' '.repeat(\r\n                    options.cache[i]\r\n                )\r\n            )\r\n        }\r\n    }\r\n\r\n    if(options.curser_under_screen) {\r\n        setCursorPosition(0, buffer.length)\r\n    }\r\n\r\n    return cache_rendered_lines;\r\n}\r\n","import { RenderableLine } from \"../../classes/screen\";\r\nimport { centerString } from \"../../helpers/rendering\";\r\nimport { MenuPropertys } from \"../../structs/menu-core\";\r\nimport MenuItem from \"../../structs/menu-item\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class MenuHeader extends MenuItem {\r\n\r\n    constructor(\r\n        private readonly _label: string\r\n    ) { \r\n        super(\"\")\r\n    }\r\n\r\n    /** @ts-ignore */\r\n    public render(width: number, props: MenuPropertys): [number, RenderableLine, RenderableLine, RenderableLine] {\r\n\r\n        const header_label = centerString(this._label, width)\r\n\r\n        return [\r\n            /** @ts-ignore */\r\n            header_label.length,\r\n\r\n            this._render(\r\n                \"-\".repeat(header_label.length + props.padding * 2),\r\n                props,\r\n                true\r\n            ),\r\n            \r\n            this._render(\r\n                header_label,\r\n                props\r\n            ),\r\n\r\n            this._render(\r\n                \"-\".repeat(header_label.length + (props.padding * 2)),\r\n                props,\r\n                true\r\n            )\r\n        ]\r\n    }\r\n\r\n    private _render(item: string, props: MenuPropertys, _remove_padding?: boolean): RenderableLine {\r\n        return [\r\n            0,\r\n            [\r\n                // The left character of the menu\r\n                props.left_column_style + // \"|\"\r\n\r\n                // The menu padding, before the item\r\n                (_remove_padding ? \"\" : ' '.repeat(props.padding)) +\r\n\r\n                // The selected item render output\r\n                item + // \"  Item  \"\r\n\r\n                // The menu padding, after the item\r\n                (_remove_padding ? \"\" : ' '.repeat(props.padding)) +\r\n                \r\n                // The right character of the menu\r\n                props.right_column_style // \"|\"\r\n            ]\r\n        ]\r\n    }\r\n\r\n}","import { centerString } from \"../../helpers/rendering\";\r\nimport { MenuPropertys } from \"../../structs/menu-core\";\r\nimport MenuItem from \"../../structs/menu-item\";\r\nimport { RenderableLine } from \"../../classes/screen\";\r\nimport wrap from 'word-wrap';\r\n\r\n\r\n\r\n\r\n\r\nexport default class MenuFooter extends MenuItem {\r\n\r\n    constructor(\r\n    ) { \r\n        super(\"\")\r\n    }\r\n\r\n    /** @ts-ignore */\r\n    public render(log: string, width: number, props: MenuPropertys): RenderableLine[] {\r\n\r\n        const footer_labels = wrap(log, { width: width - (props.padding * 2) }).split('\\n').map(lbl => centerString(lbl, width))\r\n        \r\n        /** @ts-ignore */\r\n        let max_length = footer_labels.reduce((prev, cur) => Math.max(prev.length, cur.length)) as number\r\n\r\n        if(typeof max_length === 'string') {\r\n            /** @ts-ignore */\r\n            max_length = max_length.length \r\n        }\r\n\r\n\r\n        return [\r\n            this._render(\r\n                \"-\".repeat(max_length + props.padding * 2),\r\n                props,\r\n                true\r\n            ),\r\n            \r\n            ...footer_labels.map(label => this._render(label, props)),\r\n\r\n            this._render(\r\n                \"-\".repeat(max_length + (props.padding * 2)),\r\n                props,\r\n                true\r\n            )\r\n        ]\r\n    }\r\n\r\n    private _render(item: string, props: MenuPropertys, _remove_padding?: boolean): RenderableLine {\r\n        return [\r\n            0,\r\n            [\r\n                // The left character of the menu\r\n                props.left_column_style + // \"|\"\r\n\r\n                // The menu padding, before the item\r\n                (_remove_padding ? \"\" : ' '.repeat(props.padding)) +\r\n\r\n                // The selected item render output\r\n                item + // \"  Item  \"\r\n\r\n                // The menu padding, after the item\r\n                (_remove_padding ? \"\" : ' '.repeat(props.padding)) +\r\n                \r\n                // The right character of the menu\r\n                props.right_column_style // \"|\"\r\n            ]\r\n        ]\r\n    }\r\n\r\n}","\r\nimport MenuCore, { MenuPropertys } from \"../structs/menu-core\";\r\nimport { createInterface } from \"readline\";\r\nimport renderScreenBuffer, { RenderableLine, ScreenBuffer, ScreenCache } from \"../classes/screen\";\r\nimport MenuHeader from \"../items/natives/menu-header\";\r\nimport MenuFooter from '../items/natives/menu-footer';\r\nimport { Color } from '../helpers/rendering';\r\nimport { setCursorPosition } from '../classes/console-utils';\r\nimport MenuItem from '../structs/menu-item';\r\n\r\n/** Initialize the stdin for us */\r\ncreateInterface({\r\n    input: process.stdin,\r\n    output: process.stdout,\r\n})\r\n\r\nexport default class Menu extends MenuCore {\r\n\r\n    private readonly _menu_header: MenuHeader;\r\n    private readonly _menu_footer: MenuFooter;\r\n    \r\n    private _cache?: ScreenCache = undefined\r\n\r\n    constructor(\r\n        private readonly _title: string = \"Default Menu Title\",\r\n        props: Partial<MenuPropertys> = {}\r\n    ) {\r\n        super(props);\r\n\r\n        this._menu_header = new MenuHeader(this._title)\r\n        this._menu_header.menu = this\r\n        \r\n        this._menu_footer = new MenuFooter()\r\n        this._menu_footer.menu = this\r\n\r\n    }\r\n\r\n    public initialize(): void {\r\n        this.moveSelection(false)\r\n        process.stdin.on('keypress', this._on_key_down.bind(this))\r\n\r\n    }\r\n\r\n    public dispose() {\r\n        process.stdin.off('keypress', this._on_key_down)\r\n        this.lock()\r\n        this.hide();\r\n    }\r\n\r\n\r\n    protected _hide(): void {\r\n\r\n        if(!this._cache) return;\r\n\r\n        const hidden_buffer: ScreenBuffer = []\r\n\r\n        for(const line of this._cache) {\r\n            hidden_buffer.push([\r\n                0,\r\n                [\r\n                    ' '.repeat(line)\r\n                ]\r\n            ])\r\n        }\r\n\r\n        renderScreenBuffer(hidden_buffer)\r\n        setCursorPosition(0, 0)\r\n    }\r\n\r\n    protected _show(): void {\r\n        this.render()\r\n    }\r\n\r\n    public render(width: number = this.propertys.minimal_width): void {\r\n\r\n        if(this._is_menu_hidden) return;\r\n\r\n        const buffer: ScreenBuffer = []\r\n\r\n       // Rendering the menu header\r\n        \r\n        const [ header_width, ...rendered_menu_header ] = this._menu_header.render(width, this.propertys)\r\n        width = header_width\r\n\r\n        // if(rendered_menu_header[0][1][0].length > header_width) {\r\n        //     width = header_width\r\n        // }\r\n\r\n        const rendered_menu_footer = this._menu_footer.render(\r\n            this._message,\r\n            width,\r\n            this.propertys\r\n        )\r\n\r\n       // Rendering the menu footer\r\n        \r\n        for(const idx in this._items) {\r\n            \r\n            const item = this._items[idx]\r\n            const is_item_selected = (idx as any) == this._selected_item_idx;\r\n\r\n            const rendered_item = item.render(width)\r\n\r\n            if(rendered_item.length > width) {\r\n                return this.render(rendered_item.length)\r\n            }\r\n\r\n            buffer.push(\r\n                this._render(\r\n                    rendered_item,\r\n                    is_item_selected,\r\n                    item\r\n                )\r\n            )\r\n\r\n            // We don't want to add padding after the last item\r\n            // @ts-ignore\r\n            if(idx != this._items.length - 1) {\r\n                // Adding between items padding\r\n                for(let i = 0; i < this.propertys.between_items_padding; i++) {\r\n                    buffer.push(\r\n                        this._render(\r\n                            this.propertys.between_items_style.repeat(width),\r\n                            false\r\n                        )\r\n                    )\r\n                }\r\n            }\r\n        }\r\n\r\n        // Redner the menu\r\n        this._cache = renderScreenBuffer([\r\n            // The header of the menu\r\n            ...rendered_menu_header,\r\n\r\n            // // Rendered Items\r\n            ...buffer,\r\n\r\n            // // Rendered Footer\r\n            ...rendered_menu_footer\r\n        ], { curser_under_screen: true, cache: this._cache })\r\n    }\r\n\r\n\r\n    private _render(rendered_data: string, is_selected: boolean, item?: MenuItem): RenderableLine {\r\n\r\n        return [\r\n            0,\r\n            [\r\n                // The left character of the menu\r\n                this.propertys.left_column_style ?? \"|\", // \"|\"\r\n                ...(\r\n                    is_selected ? (\r\n                        [\r\n                            [\r\n                                Color.BACKGROUND_BLUE | Color.BACKGROUND_GREEN | Color.BACKGROUND_RED,\r\n                                // The menu padding, before the item\r\n                                ' '.repeat(this.propertys.padding) +\r\n                \r\n                                // The selected item render output\r\n                                rendered_data + // \"  Item  \"\r\n                \r\n                                // The menu padding, after the item\r\n                                ' '.repeat(this.propertys.padding)\r\n                            ]\r\n                        ]\r\n                    ) : (\r\n                        [\r\n                            \r\n                            // The menu padding, before the item\r\n                            ' '.repeat(this.propertys.padding),\r\n\r\n                            (\r\n                                item?.isDisabled ? (\r\n                                    [\r\n                                        8 /** 8 for gray */,\r\n                                        // The selected item render output\r\n                                        rendered_data // \"  Item  \"\r\n                                    ]\r\n                                ) : (\r\n                                    rendered_data\r\n                                ) as string\r\n                            ),\r\n                     \r\n                            // The menu padding, after the item\r\n                            ' '.repeat(this.propertys.padding)\r\n                        \r\n                        ]\r\n                    )\r\n                ) as string[],\r\n\r\n                // The right character of the menu\r\n                this.propertys.right_column_style + // \"|\"\r\n    \r\n                // Selected item indicator\r\n                (is_selected ? \" <--\" : \"\") // \" <-\" or \"\"\r\n            ],\r\n        ]\r\n    }\r\n\r\n}\r\n","import Menu from \"../menus/menu\";\r\nimport { byteOnly } from \"../helpers/rendering\";\r\nimport MenuCore from \"../structs/menu-core\";\r\nimport MenuItem, { MenuItemProps } from \"../structs/menu-item\";\r\nimport Button from \"./button\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface SubMenuProps extends Omit<MenuItemProps, 'onClicked'> {\r\n    onClicked: (this: SubMenu) => void,\r\n}\r\n\r\n\r\nexport default class SubMenu extends MenuItem {\r\n\r\n    public get subMenu() {\r\n        return this._render_menu;\r\n    }\r\n\r\n    constructor(\r\n        label: string,\r\n        private readonly _render_menu: MenuCore = new Menu(label),\r\n        propertys: Partial<SubMenuProps> = {}\r\n\r\n    ) {\r\n        super(label, propertys as any)\r\n        \r\n        this._render_menu.lock()\r\n        this._render_menu.append(new Button(\"Return\", {\r\n            onClicked: () => {\r\n                this.hide()\r\n            },\r\n        }))\r\n\r\n        this._render_menu.initialize()\r\n    }\r\n\r\n    public render(width: number) {\r\n        \r\n        const label = this.label\r\n        const rightIcon = '[<]'\r\n\r\n        let spaces = byteOnly(\r\n            width - label.length\r\n        ) / 2\r\n        \r\n        return (\r\n            ' '.repeat(spaces + (\r\n                    label.length % 2 == 1 ? 1 : 0\r\n                )\r\n            ) +\r\n            label +\r\n            ' '.repeat(spaces - rightIcon.length) + rightIcon\r\n        )\r\n    }\r\n\r\n    public show() {\r\n\r\n        this.menu.lock();\r\n        this.menu.hide();\r\n\r\n        this._render_menu.show();\r\n        this._render_menu.unlock();\r\n        this._render_menu.render()\r\n\r\n    }\r\n\r\n    public hide() {\r\n        \r\n        this._render_menu.lock();\r\n        this._render_menu.hide();\r\n\r\n        process.nextTick(() => {\r\n            this.menu.unlock();\r\n            this.menu.show();\r\n        })\r\n\r\n    }\r\n\r\n    public onClicked() {\r\n        super.onClicked();\r\n        this.show();\r\n    }\r\n\r\n}","import Button from './items/button';\r\nimport CheckButton from './items/check-button';\r\nimport SubMenu from './items/sub-menu';\r\nimport Menu from './menus/menu';\r\n\r\n\r\nmodule.exports = Menu   \r\nmodule.exports.Button = Button\r\nmodule.exports.CheckButton = CheckButton\r\nmodule.exports.SubMenu = SubMenu\r\nmodule.exports.Menu = Menu\r\n\r\nexport {\r\n    Button,\r\n    CheckButton,\r\n    SubMenu,\r\n    Menu\r\n}"],"names":["kernal","ffi","Color","RenderColor","color","create","Number","split","toString","getCurrentColor","handle","GetStdHandle","buff","Buffer","alloc","GetConsoleScreenBufferInfo","readInt32LE","applyColor","SetConsoleTextAttribute","toggle","_is_applyed","end","apply","_default_attributes","byteOnly","n","Math","max","centerString","str","width","spaces","length","repeat","MenuItem","_label","propertys","Object","assign","is_countless","onClicked","onKeyDown","key","disabled","disable","_is_disabled","_menu","render","enable","bind","Error","value","val","_id","Button","label","props","CheckButton","_checked","checked","format","data","obj","replace","match","MenuCore","left_column_style","right_column_style","header_style","bottom_row_style","between_items_style","padding","between_items_padding","message_item_selected","message_item_format","minimal_width","showMessage","message","timeout","_message","clearTimeout","_message_timeout_tmo","setTimeout","clearMessage","_on_key_down","keydat","_is_menu_locked","name","moveSelection","index","_selected_item_idx","current_selected_item","lock","unlock","clear","_hide","_show","hide","_is_menu_hidden","show","append","item","at","_items","splice","indexOf","push","id","ITEM_TYPE","menu","remove","up","isDisabled","isEnabled","currentItemIndex","getItem","initialize","setCursorPosition","x","y","process","stdout","cursorTo","renderScreenBuffer","buffer","options","height","cache","writeFileSync","map","line","join","cache_rendered_lines","current_line","_current_point","current_str","is_color","Array","write","i","curser_under_screen","MenuHeader","header_label","_render","_remove_padding","MenuFooter","log","footer_labels","wrap","lbl","max_length","reduce","prev","cur","createInterface","input","stdin","output","Menu","_title","undefined","_menu_header","_menu_footer","on","dispose","off","_cache","hidden_buffer","header_width","rendered_menu_header","rendered_menu_footer","idx","is_item_selected","rendered_item","rendered_data","is_selected","BACKGROUND_BLUE","BACKGROUND_GREEN","BACKGROUND_RED","SubMenu","_render_menu","rightIcon","nextTick","module","exports"],"mappings":"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"}